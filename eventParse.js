// Generated by CoffeeScript 1.6.1
var Event, eventParser,
  _this = this;

eventParser = (function() {

  function eventParser() {
    var _this = this;
    this._isDate = function(text) {
      return eventParser.prototype._isDate.apply(_this, arguments);
    };
  }

  eventParser.prototype.getResults = function() {
    var location, startTime, title;
    this._clean();
    this._getLocation();
    this._clean();
    title = this.title;
    location = this.location;
    startTime = this.startTime;
    return {
      title: title,
      location: location,
      startTime: startTime
    };
  };

  eventParser.prototype._clean = function() {
    if (this.title) {
      console.log(this.title.lastIndexOf(" at"));
      console.log(this.title.length - 4);
      if (this.title.lastIndexOf(" at") === this.title.length - 4) {
        this.title = this.title.substring(0, this.title.length - 4);
      }
      if (this.title.lastIndexOf(" on") === this.title.length - 4) {
        this.title = this.title.substring(0, this.title.length - 4);
      }
      if (this.title.lastIndexOf(" for") === this.title.length - 5) {
        return this.title = this.title.substring(0, this.title.length - 5);
      }
    }
  };

  eventParser.prototype._getLocation = function() {
    var split;
    split = this.title.split(" at ");
    this.title = split[0];
    this.location = split[1];
    if (this.location) {
      return;
    }
    split = this.title.split(" in ");
    this.title = split[0];
    this.location = split[1];
    if (this.location) {
      return;
    }
    split = this.title.split(" on ");
    this.title = split[0];
    this.location = split[1];
    if (this.location) {

    }
  };

  eventParser.prototype.parse = function(text) {
    this.text = text;
    this.title = text;
    this.location = '';
    this.startTime = Date.parse(text);
    this._splitter(text);
    if (this.startTime) {
      return this.getResults();
    }
    this.startTime = Date.parse(this._inferredTime(this.text));
    this.title = this.text;
    if (this.startTime) {
      return this.getResults();
    }
  };

  eventParser.prototype._isDate = function(text) {
    text = this._transform(text);
    if (Date.parse(text) != null) {
      console.log(text);
    }
    return Date.parse(text) != null;
  };

  eventParser.prototype._splitter = function(text) {
    var guess, guesses, options, substrings, time, title, words,
      _this = this;
    console.log("splitting " + text);
    time = "";
    title = text;
    words = text.split(" ");
    guesses = _.filter(_.range(words.length), function(n) {
      return _this._isDate(words[n]);
    });
    if (!(guesses.length > 0)) {
      return;
    }
    guess = guesses[0];
    substrings = _.rest(words, guess);
    options = _.map(_.range(substrings.length), function(n) {
      return _.first(substrings, n + 1).join(' ');
    });
    options = _.filter(options, this._isDate);
    time = _.last(options);
    title = this.title.replace(time, '');
    this.startTime = Date.parse(this._transform(time));
    return this.title = title;
  };

  eventParser.prototype._transform = function(text) {
    text = this._initialTransform(text);
    text = this._roughTransform(text);
    text = text.replace(/for at/gi, "at");
    text = text.replace(/at at/gi, "at");
    return text;
  };

  eventParser.prototype._initialTransform = function(text) {
    text = text.replace(/midnight/gi, "at 12am");
    text = text.replace(/morning/gi, "at 9am");
    text = text.replace(/midday/gi, "at 11am");
    text = text.replace(/afternoon/gi, "at 4pm");
    text = text.replace(/noon/gi, "at 12pm");
    text = text.replace(/night/gi, "at 9pm");
    return text = text.replace(/sometime/gi, "");
  };

  eventParser.prototype._roughTransform = function(text) {
    text = text.replace(/dinner/gi, "at 6pm");
    text = text.replace(/lunch/gi, "at 12pm");
    return text = text.replace(/breakfast/gi, "at 9pm");
  };

  eventParser.prototype._inferredTime = function(text) {
    var contains;
    text = text.toLowerCase();
    contains = function(substring) {
      return text.indexOf(substring) !== -1;
    };
    if (contains("dinner")) {
      return "today at 6pm";
    }
    if (contains("lunch")) {
      return "today at 12pm";
    }
    if (contains("breakfast")) {
      return "today at 9am";
    }
    if (contains("morning")) {
      return "today at 9am";
    }
    return "today";
  };

  return eventParser;

})();

Event = new eventParser();
